name: publish_images

on:
  push:
    branches:
      - "main"

jobs:
  docker-image-monkey-cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./javascript/project/modules/monkey-cypress
          file: ./javascript/project/modules/monkey-cypress/monkey.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{  github.repository }}/monkey-cypress:latest
            ghcr.io/${{  github.repository }}/monkey-cypress:0.0.1

  docker-image-smart-monkey-cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./javascript/project/modules/monkey-cypress
          file: ./javascript/project/modules/monkey-cypress/smart-monkey.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{  github.repository }}/smart-monkey-cypress:latest
            ghcr.io/${{  github.repository }}/smart-monkey-cypress:0.0.1

  docker-image-ripper-playwright:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./javascript/project/modules/ripper-playwright
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{  github.repository }}/ripper-playwright:latest
            ghcr.io/${{  github.repository }}/ripper-playwright:0.0.1

  docker-image-e2e-cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./javascript/project/modules/e2e-cypress
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{  github.repository }}/e2e-cypress:latest
            ghcr.io/${{  github.repository }}/e2e-cypress:0.0.1

  docker-image-e2e-playwright:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./javascript/project/modules/e2e-playwright
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{  github.repository }}/e2e-playwright:latest
            ghcr.io/${{  github.repository }}/e2e-playwright:0.0.1

  docker-image-e2e-puppeteer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./javascript/project/modules/e2e-puppeteer
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{  github.repository }}/e2e-puppeteer:latest
            ghcr.io/${{  github.repository }}/e2e-puppeteer:0.0.1
